{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RangeScale, RangeBar, LeftBlock, RightBlock, LeftToggle, RightToggle, LeftLabel, RightLabel, Input } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Range = _ref => {\n  _s();\n\n  let {\n    width,\n    name,\n    minValue,\n    maxValue\n  } = _ref;\n  const [min, setMin] = useState(minValue);\n  const [max, setMax] = useState(maxValue);\n\n  const changeValue = (evt, setValue) => {\n    if (evt.target.value > evt.target.min) setValue(Number(evt.target.min));\n    if (evt.target.value < evt.target.max) setValue(Number(evt.target.max));\n    setValue(Number(evt.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RangeScale, {\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(RangeBar, {\n      left: min / 100,\n      right: max / 100,\n      children: [/*#__PURE__*/_jsxDEV(LeftBlock, {\n        children: [/*#__PURE__*/_jsxDEV(LeftToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeftLabel, {\n          children: [\"\\u043E\\u0442\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            max: \"100000\",\n            name: `min-${name}`,\n            value: min,\n            onChange: evt => changeValue(evt, setMin)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBlock, {\n        children: [/*#__PURE__*/_jsxDEV(RightToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightLabel, {\n          children: [\"\\u0434\\u043E\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            max: \"100000\",\n            name: `max-${name}`,\n            value: max,\n            onChange: evt => changeValue(evt, setMax)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Range, \"84wBBSzAfkBVKLjY37ED050waBg=\");\n\n_c = Range;\nexport default Range;\n\nvar _c;\n\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx"],"names":["React","useState","RangeScale","RangeBar","LeftBlock","RightBlock","LeftToggle","RightToggle","LeftLabel","RightLabel","Input","Range","width","name","minValue","maxValue","min","setMin","max","setMax","changeValue","evt","setValue","target","value","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,UARF,EASEC,KATF,QAUO,UAVP;;;AAmBA,MAAMC,KAA4B,GAChC,QAGiB;AAAA;;AAAA,MAHhB;AAAEC,IAAAA,KAAF;AACEC,IAAAA,IADF;AAEEC,IAAAA,QAFF;AAGEC,IAAAA;AAHF,GAGgB;AAEjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAACa,QAAD,CAA9B;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAACc,QAAD,CAA9B;;AAEA,QAAMK,WAAW,GAAG,CAACC,GAAD,EAAWC,QAAX,KAA6B;AAC/C,QAAID,GAAG,CAACE,MAAJ,CAAWC,KAAX,GAAmBH,GAAG,CAACE,MAAJ,CAAWP,GAAlC,EAAuCM,QAAQ,CAACG,MAAM,CAACJ,GAAG,CAACE,MAAJ,CAAWP,GAAZ,CAAP,CAAR;AACvC,QAAIK,GAAG,CAACE,MAAJ,CAAWC,KAAX,GAAmBH,GAAG,CAACE,MAAJ,CAAWL,GAAlC,EAAuCI,QAAQ,CAACG,MAAM,CAACJ,GAAG,CAACE,MAAJ,CAAWL,GAAZ,CAAP,CAAR;AACvCI,IAAAA,QAAQ,CAACG,MAAM,CAACJ,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAP,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEZ,KAAnB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEI,GAAG,GAAG,GAAtB;AAA2B,MAAA,KAAK,EAAEE,GAAG,GAAG,GAAxC;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,GAFN;AAGE,YAAA,GAAG,EAAC,QAHN;AAIE,YAAA,IAAI,EAAG,OAAML,IAAK,EAJpB;AAKE,YAAA,KAAK,EAAEG,GALT;AAME,YAAA,QAAQ,EAAEK,GAAG,IAAID,WAAW,CAACC,GAAD,EAAMJ,MAAN;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,GAFN;AAGE,YAAA,GAAG,EAAC,QAHN;AAIE,YAAA,IAAI,EAAG,OAAMJ,IAAK,EAJpB;AAKE,YAAA,KAAK,EAAEK,GALT;AAME,YAAA,QAAQ,EAAEG,GAAG,IAAID,WAAW,CAACC,GAAD,EAAMF,MAAN;AAN9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAlDD;;GAAMR,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  RangeScale,\n  RangeBar,\n  LeftBlock,\n  RightBlock,\n  LeftToggle,\n  RightToggle,\n  LeftLabel,\n  RightLabel,\n  Input\n} from './styles';\n\nexport interface IRangeProps {\n  width?: number;\n  name: string;\n  minValue: number;\n  maxValue: number;\n}\n\nconst Range: React.FC<IRangeProps> =\n  ({ width,\n     name,\n     minValue,\n     maxValue}) => {\n\n  const [min, setMin] = useState(minValue);\n  const [max, setMax] = useState(maxValue);\n\n  const changeValue = (evt: any, setValue: any) => {\n    if (evt.target.value > evt.target.min) setValue(Number(evt.target.min));\n    if (evt.target.value < evt.target.max) setValue(Number(evt.target.max));\n    setValue(Number(evt.target.value));\n  };\n\n  return (\n    <RangeScale width={width}>\n      <RangeBar left={min / 100} right={max / 100}>\n        <LeftBlock>\n          <LeftToggle type='button'/>\n          <LeftLabel>\n            от\n            <Input\n              type='number'\n              min='0'\n              max='100000'\n              name={`min-${name}`}\n              value={min}\n              onChange={evt => changeValue(evt, setMin)}\n            />\n          </LeftLabel>\n        </LeftBlock>\n\n        <RightBlock>\n          <RightToggle type='button' />\n          <RightLabel>\n            до\n            <Input\n              type='number'\n              min='0'\n              max='100000'\n              name={`max-${name}`}\n              value={max}\n              onChange={evt => changeValue(evt, setMax)}\n            />\n          </RightLabel>\n        </RightBlock>\n      </RangeBar>\n    </RangeScale>\n  )\n};\n\nexport default Range;\n"]},"metadata":{},"sourceType":"module"}