{"ast":null,"code":"import { createStore, createEvent } from 'effector';\nimport { devices } from '../data/devices';\nexport const sortByPrice = createEvent();\nexport const sortByNovelty = createEvent();\nexport const $catalog = createStore(devices).on(sortByPrice, (products, type) => {\n  switch (type) {\n    case 'lowToHigh':\n      return products.sort((a, b) => a.price - b.price);\n\n    case 'highToLow':\n      return products.sort((a, b) => b.price - a.price);\n\n    default:\n      return products;\n  }\n}).on(sortByNovelty, products => {\n  products.sort((a, b) => a.isNew ? 1 : b.isNew ? 0 : -1);\n});","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/catalog.ts"],"names":["createStore","createEvent","devices","sortByPrice","sortByNovelty","$catalog","on","products","type","sort","a","b","price","isNew"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,WAAW,GAAGF,WAAW,EAA/B;AACP,OAAO,MAAMG,aAAa,GAAGH,WAAW,EAAjC;AAEP,OAAO,MAAMI,QAAQ,GAAGL,WAAW,CAAYE,OAAZ,CAAX,CACrBI,EADqB,CAClBH,WADkB,EACL,CAACI,QAAD,EAAWC,IAAX,KAAoB;AACnC,UAAQA,IAAR;AACE,SAAK,WAAL;AACE,aAAOD,QAAQ,CAACE,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAApC,CAAP;;AACF,SAAK,WAAL;AACE,aAAOL,QAAQ,CAACE,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAApC,CAAP;;AACF;AACE,aAAOL,QAAP;AANJ;AAQD,CAVqB,EAUnBD,EAVmB,CAUhBF,aAVgB,EAUAG,QAAD,IAAc;AACjCA,EAAAA,QAAQ,CAACE,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,KAAF,GAAU,CAAV,GAAcF,CAAC,CAACE,KAAF,GAAU,CAAV,GAAc,CAAC,CAArD;AACD,CAZqB,CAAjB","sourcesContent":["import { createStore, createEvent } from 'effector';\nimport { devices, IDevice } from '../data/devices';\n\nexport const sortByPrice = createEvent<'lowToHigh' | 'highToLow'>();\nexport const sortByNovelty = createEvent();\n\nexport const $catalog = createStore<IDevice[]>(devices)\n  .on(sortByPrice, (products, type) => {\n    switch (type) {\n      case 'lowToHigh':\n        return products.sort((a, b) => a.price - b.price);\n      case 'highToLow':\n        return products.sort((a, b) => b.price - a.price);\n      default:\n        return products;\n    }\n  }).on(sortByNovelty, (products) => {\n    products.sort((a, b) => a.isNew ? 1 : b.isNew ? 0 : -1);\n  });\n"]},"metadata":{},"sourceType":"module"}