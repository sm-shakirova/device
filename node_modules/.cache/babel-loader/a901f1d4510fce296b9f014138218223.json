{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/layout/modal/modal.tsx\";\nimport React from 'react';\nimport { Wrapper, Overlay, StyledPopup, CloseButton } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  let {\n    isOpen,\n    setOpen,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPopup, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/layout/modal/modal.tsx"],"names":["React","Wrapper","Overlay","StyledPopup","CloseButton","Modal","isOpen","setOpen","children"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,WAA3B,EAAwCC,WAAxC,QAA2D,UAA3D;;;AAQA,MAAMC,KAAuB,GAC3B,QAEkB;AAAA,MAFjB;AAAEC,IAAAA,MAAF;AACEC,IAAAA,OADF;AAEEC,IAAAA;AAFF,GAEiB;AAClB,sBACE,QAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,MAAjB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;KAAMH,K;AAeN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Wrapper, Overlay, StyledPopup, CloseButton } from './styles';\n\nexport interface IPopup {\n  isOpen: boolean;\n  setOpen: any;\n  children: React.ReactNode;\n}\n\nconst Modal: React.FC<IPopup> =\n  ({ isOpen,\n     setOpen,\n     children }) => {\n  return (\n    <Wrapper isOpen={isOpen}>\n      <Overlay onClick={() => setOpen(false)} />\n      <StyledPopup>\n        <CloseButton onClick={() => setOpen(false)}/>\n        {children}\n      </StyledPopup>\n    </Wrapper>\n  )\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}