{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RangeScale, RangeBar, LeftBlock, RightBlock, LeftToggle, RightToggle, LeftLabel, RightLabel, Input } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Range = _ref => {\n  _s();\n\n  let {\n    width,\n    name,\n    minValue,\n    maxValue,\n    coef\n  } = _ref;\n  const [min, setMin] = useState(minValue);\n  const [max, setMax] = useState(maxValue);\n  return /*#__PURE__*/_jsxDEV(RangeScale, {\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(RangeBar, {\n      left: min / coef,\n      right: max / coef,\n      children: [/*#__PURE__*/_jsxDEV(LeftBlock, {\n        children: [/*#__PURE__*/_jsxDEV(LeftToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeftLabel, {\n          children: [\"\\u043E\\u0442\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            max: \"10000\",\n            name: `min-${name}`,\n            value: min,\n            onChange: evt => setMin(Number(evt.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBlock, {\n        children: [/*#__PURE__*/_jsxDEV(RightToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightLabel, {\n          children: [\"\\u0434\\u043E\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            name: `max-${name}`,\n            value: max,\n            onChange: evt => setMax(Number(evt.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Range, \"84wBBSzAfkBVKLjY37ED050waBg=\");\n\n_c = Range;\nexport default Range;\n\nvar _c;\n\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx"],"names":["React","useState","RangeScale","RangeBar","LeftBlock","RightBlock","LeftToggle","RightToggle","LeftLabel","RightLabel","Input","Range","width","name","minValue","maxValue","coef","min","setMin","max","setMax","evt","Number","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,UARF,EASEC,KATF,QAUO,UAVP;;;AAoBA,MAAMC,KAA4B,GAChC,QAIa;AAAA;;AAAA,MAJZ;AAAEC,IAAAA,KAAF;AACEC,IAAAA,IADF;AAEEC,IAAAA,QAFF;AAGEC,IAAAA,QAHF;AAIEC,IAAAA;AAJF,GAIY;AAEb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAACa,QAAD,CAA9B;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAACc,QAAD,CAA9B;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,KAAnB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEK,GAAG,GAAGD,IAAtB;AAA4B,MAAA,KAAK,EAAEG,GAAG,GAAGH,IAAzC;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,GAFN;AAGE,YAAA,GAAG,EAAC,OAHN;AAIE,YAAA,IAAI,EAAG,OAAMH,IAAK,EAJpB;AAKE,YAAA,KAAK,EAAEI,GALT;AAME,YAAA,QAAQ,EAAEI,GAAG,IAAIH,MAAM,CAACI,MAAM,CAACD,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAP;AANzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,IAAI,EAAG,OAAMX,IAAK,EAFpB;AAGE,YAAA,KAAK,EAAEM,GAHT;AAIE,YAAA,QAAQ,EAAEE,GAAG,IAAID,MAAM,CAACE,MAAM,CAACD,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAP;AAJzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA3CD;;GAAMb,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  RangeScale,\n  RangeBar,\n  LeftBlock,\n  RightBlock,\n  LeftToggle,\n  RightToggle,\n  LeftLabel,\n  RightLabel,\n  Input\n} from './styles';\n\nexport interface IRangeProps {\n  width?: number;\n  name: string;\n  minValue: number;\n  maxValue: number;\n  coef: number;\n}\n\nconst Range: React.FC<IRangeProps> =\n  ({ width,\n     name,\n     minValue,\n     maxValue,\n     coef}) => {\n\n  const [min, setMin] = useState(minValue);\n  const [max, setMax] = useState(maxValue);\n\n  return (\n    <RangeScale width={width}>\n      <RangeBar left={min / coef} right={max / coef}>\n        <LeftBlock>\n          <LeftToggle type='button'/>\n          <LeftLabel>\n            от\n            <Input\n              type='number'\n              min='0'\n              max='10000'\n              name={`min-${name}`}\n              value={min}\n              onChange={evt => setMin(Number(evt.target.value))}\n            />\n          </LeftLabel>\n        </LeftBlock>\n\n        <RightBlock>\n          <RightToggle type='button' />\n          <RightLabel>\n            до\n            <Input\n              type='number'\n              name={`max-${name}`}\n              value={max}\n              onChange={evt => setMax(Number(evt.target.value))}\n            />\n          </RightLabel>\n        </RightBlock>\n      </RangeBar>\n    </RangeScale>\n  )\n};\n\nexport default Range;\n"]},"metadata":{},"sourceType":"module"}