{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RangeScale, RangeBar, LeftBlock, RightBlock, LeftToggle, RightToggle, LeftLabel, RightLabel, Input } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Range = _ref => {\n  _s();\n\n  let {\n    width,\n    name,\n    min,\n    max,\n    onMinChange,\n    onMaxChange\n  } = _ref;\n  const [leftEdge, setLeftEdge] = useState(min);\n  const [rightEdge, setRightEdge] = useState(max);\n\n  const handleLeftEdgeChange = edge => {\n    if (edge < 0) setLeftEdge(0);else if (edge > 7000) setLeftEdge(7000);else if (edge > rightEdge) setLeftEdge(rightEdge - 1000);else setLeftEdge(edge);\n  };\n\n  const handleRightEdgeChange = edge => {\n    if (edge < 2000) setRightEdge(2000);else if (edge > 10000) setRightEdge(10000);else if (edge < leftEdge) setRightEdge(leftEdge + 1000);else setRightEdge(edge);\n  };\n\n  const [minValue, setMinValue] = useState(min === 0 ? '' : min);\n  const [maxValue, setMaxValue] = useState(max === 2000 ? '' : max);\n\n  const handleValueChange = (value, setValue) => {\n    setValue(Number(value) <= 0 ? '' : value);\n    onMinChange(minValue === '' ? min : Number(minValue));\n    onMaxChange(maxValue === '' ? max : Number(maxValue));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RangeScale, {\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(RangeBar, {\n      left: leftEdge,\n      right: rightEdge,\n      children: [/*#__PURE__*/_jsxDEV(LeftBlock, {\n        draggable: true,\n        onDrag: () => console.log('dragging...'),\n        children: [/*#__PURE__*/_jsxDEV(LeftToggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeftLabel, {\n          children: [\"\\u043E\\u0442\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            placeholder: leftEdge.toString(),\n            name: `min-${name}`,\n            value: minValue,\n            onChange: evt => {\n              handleLeftEdgeChange(Number(evt.target.value));\n              handleValueChange(evt.target.value, setMinValue);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBlock, {\n        children: [/*#__PURE__*/_jsxDEV(RightToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightLabel, {\n          children: [\"\\u0434\\u043E\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            placeholder: rightEdge.toString(),\n            name: `max-${name}`,\n            value: maxValue,\n            onChange: evt => {\n              handleRightEdgeChange(Number(evt.target.value));\n              handleValueChange(evt.target.value, setMaxValue);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Range, \"24oEWbJMHt9KDH8+SFwS7ybcWFI=\");\n\n_c = Range;\nexport default Range;\n\nvar _c;\n\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx"],"names":["React","useState","RangeScale","RangeBar","LeftBlock","RightBlock","LeftToggle","RightToggle","LeftLabel","RightLabel","Input","Range","width","name","min","max","onMinChange","onMaxChange","leftEdge","setLeftEdge","rightEdge","setRightEdge","handleLeftEdgeChange","edge","handleRightEdgeChange","minValue","setMinValue","maxValue","setMaxValue","handleValueChange","value","setValue","Number","console","log","toString","evt","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,SAPF,EAQEC,UARF,EASEC,KATF,QAUO,UAVP;;;AAqBA,MAAMC,KAA4B,GAChC,QAKqB;AAAA;;AAAA,MALpB;AAAEC,IAAAA,KAAF;AACEC,IAAAA,IADF;AAEEC,IAAAA,GAFF;AAGEC,IAAAA,GAHF;AAIEC,IAAAA,WAJF;AAKEC,IAAAA;AALF,GAKoB;AAErB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACa,GAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAACc,GAAD,CAA1C;;AAEA,QAAMO,oBAAoB,GAAIC,IAAD,IAAkB;AAC7C,QAAIA,IAAI,GAAG,CAAX,EAAcJ,WAAW,CAAC,CAAD,CAAX,CAAd,KACK,IAAII,IAAI,GAAG,IAAX,EAAiBJ,WAAW,CAAC,IAAD,CAAX,CAAjB,KACA,IAAII,IAAI,GAAGH,SAAX,EAAsBD,WAAW,CAACC,SAAS,GAAG,IAAb,CAAX,CAAtB,KACAD,WAAW,CAACI,IAAD,CAAX;AACN,GALD;;AAOA,QAAMC,qBAAqB,GAAID,IAAD,IAAkB;AAC9C,QAAIA,IAAI,GAAG,IAAX,EAAiBF,YAAY,CAAC,IAAD,CAAZ,CAAjB,KACK,IAAIE,IAAI,GAAG,KAAX,EAAkBF,YAAY,CAAC,KAAD,CAAZ,CAAlB,KACA,IAAIE,IAAI,GAAGL,QAAX,EAAqBG,YAAY,CAACH,QAAQ,GAAG,IAAZ,CAAZ,CAArB,KACAG,YAAY,CAACE,IAAD,CAAZ;AACN,GALD;;AAOA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAACa,GAAG,KAAK,CAAR,GAAY,EAAZ,GAAiBA,GAAlB,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAACc,GAAG,KAAK,IAAR,GAAe,EAAf,GAAoBA,GAArB,CAAxC;;AAEA,QAAMc,iBAAiB,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAgD;AACxEA,IAAAA,QAAQ,CAACC,MAAM,CAACF,KAAD,CAAN,IAAiB,CAAjB,GAAqB,EAArB,GAA0BA,KAA3B,CAAR;AACAd,IAAAA,WAAW,CAACS,QAAQ,KAAM,EAAd,GAAmBX,GAAnB,GAAyBkB,MAAM,CAACP,QAAD,CAAhC,CAAX;AACAR,IAAAA,WAAW,CAACU,QAAQ,KAAK,EAAb,GAAkBZ,GAAlB,GAAwBiB,MAAM,CAACL,QAAD,CAA/B,CAAX;AACD,GAJD;;AAMA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAEf,KAAnB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEM,QAAhB;AAA0B,MAAA,KAAK,EAAEE,SAAjC;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAE,IAAtB;AAA4B,QAAA,MAAM,EAAE,MAAMa,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA1C;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,GAFN;AAGE,YAAA,WAAW,EAAEhB,QAAQ,CAACiB,QAAT,EAHf;AAIE,YAAA,IAAI,EAAG,OAAMtB,IAAK,EAJpB;AAKE,YAAA,KAAK,EAAEY,QALT;AAME,YAAA,QAAQ,EAAEW,GAAG,IAAI;AACfd,cAAAA,oBAAoB,CAACU,MAAM,CAACI,GAAG,CAACC,MAAJ,CAAWP,KAAZ,CAAP,CAApB;AACAD,cAAAA,iBAAiB,CAACO,GAAG,CAACC,MAAJ,CAAWP,KAAZ,EAAmBJ,WAAnB,CAAjB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,UAAD;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA,kDAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,GAAG,EAAC,GAFN;AAGE,YAAA,WAAW,EAAEN,SAAS,CAACe,QAAV,EAHf;AAIE,YAAA,IAAI,EAAG,OAAMtB,IAAK,EAJpB;AAKE,YAAA,KAAK,EAAEc,QALT;AAME,YAAA,QAAQ,EAAES,GAAG,IAAI;AACfZ,cAAAA,qBAAqB,CAACQ,MAAM,CAACI,GAAG,CAACC,MAAJ,CAAWP,KAAZ,CAAP,CAArB;AACAD,cAAAA,iBAAiB,CAACO,GAAG,CAACC,MAAJ,CAAWP,KAAZ,EAAmBF,WAAnB,CAAjB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA3ED;;GAAMjB,K;;KAAAA,K;AA6EN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  RangeScale,\n  RangeBar,\n  LeftBlock,\n  RightBlock,\n  LeftToggle,\n  RightToggle,\n  LeftLabel,\n  RightLabel,\n  Input\n} from './styles';\n\nexport interface IRangeProps {\n  width?: number;\n  name: string;\n  min: number;\n  max: number;\n  onMinChange: (value: number) => any;\n  onMaxChange: (value: number) => any;\n}\n\nconst Range: React.FC<IRangeProps> =\n  ({ width,\n     name,\n     min,\n     max,\n     onMinChange,\n     onMaxChange }) => {\n\n  const [leftEdge, setLeftEdge] = useState(min);\n  const [rightEdge, setRightEdge] = useState(max);\n\n  const handleLeftEdgeChange = (edge: number) => {\n    if (edge < 0) setLeftEdge(0);\n    else if (edge > 7000) setLeftEdge(7000);\n    else if (edge > rightEdge) setLeftEdge(rightEdge - 1000);\n    else setLeftEdge(edge);\n  };\n\n  const handleRightEdgeChange = (edge: number) => {\n    if (edge < 2000) setRightEdge(2000);\n    else if (edge > 10000) setRightEdge(10000);\n    else if (edge < leftEdge) setRightEdge(leftEdge + 1000);\n    else setRightEdge(edge);\n  };\n\n  const [minValue, setMinValue] = useState(min === 0 ? '' : min);\n  const [maxValue, setMaxValue] = useState(max === 2000 ? '' : max);\n\n  const handleValueChange = (value: string, setValue: (arg: any) => any) => {\n    setValue(Number(value) <= 0 ? '' : value);\n    onMinChange(minValue ===  '' ? min : Number(minValue));\n    onMaxChange(maxValue === '' ? max : Number(maxValue));\n  };\n\n  return (\n    <RangeScale width={width}>\n      <RangeBar left={leftEdge} right={rightEdge}>\n        <LeftBlock draggable={true} onDrag={() => console.log('dragging...')}>\n          <LeftToggle/>\n          <LeftLabel>\n            от\n            <Input\n              type='number'\n              min='0'\n              placeholder={leftEdge.toString()}\n              name={`min-${name}`}\n              value={minValue}\n              onChange={evt => {\n                handleLeftEdgeChange(Number(evt.target.value));\n                handleValueChange(evt.target.value, setMinValue);\n              }}\n            />\n          </LeftLabel>\n        </LeftBlock>\n\n        <RightBlock>\n          <RightToggle type='button' />\n          <RightLabel>\n            до\n            <Input\n              type='number'\n              min='0'\n              placeholder={rightEdge.toString()}\n              name={`max-${name}`}\n              value={maxValue}\n              onChange={evt => {\n                handleRightEdgeChange(Number(evt.target.value));\n                handleValueChange(evt.target.value, setMaxValue);\n              }}\n            />\n          </RightLabel>\n        </RightBlock>\n      </RangeBar>\n    </RangeScale>\n  )\n};\n\nexport default Range;\n"]},"metadata":{},"sourceType":"module"}