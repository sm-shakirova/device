{"ast":null,"code":"import { createStore, createEffect, createEvent } from 'effector';\nexport const loadUsers = createEffect(async () => {\n  const req = await fetch('https://jsonplaceholder.typicode.com/users');\n  if (req.ok) return req.json();else return [];\n});\nexport const findUser = createEvent();\nexport const addUser = createEvent(); // @ts-ignore\n\nexport const $users = createStore({\n  userList: [],\n  currentUser: {\n    name: ''\n  },\n  isLogged: false,\n  loginError: false\n}).on(loadUsers.doneData, (state, payload) => {\n  state.userList = payload;\n}).on(findUser, (state, newUser) => {\n  // @ts-ignore\n  if (state.userList.find(user => user.name === newUser.name)) {\n    state.currentUser = newUser;\n    state.isLogged = true;\n  } else state.loginError = true;\n}).on(addUser, (state, newUser) => {\n  // @ts-ignore\n  state.userList = [...state.userList, newUser];\n  state.currentUser = newUser;\n  state.isLogged = true;\n});","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/users.ts"],"names":["createStore","createEffect","createEvent","loadUsers","req","fetch","ok","json","findUser","addUser","$users","userList","currentUser","name","isLogged","loginError","on","doneData","state","payload","newUser","find","user"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,WAApC,QAAuD,UAAvD;AASA,OAAO,MAAMC,SAAS,GAAGF,YAAY,CAAC,YAAY;AAChD,QAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,MAAID,GAAG,CAACE,EAAR,EAAY,OAAOF,GAAG,CAACG,IAAJ,EAAP,CAAZ,KACK,OAAO,EAAP;AACN,CAJoC,CAA9B;AAMP,OAAO,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACP,OAAO,MAAMO,OAAO,GAAGP,WAAW,EAA3B,C,CAEP;;AACA,OAAO,MAAMQ,MAAM,GAAGV,WAAW,CAAC;AAChCW,EAAAA,QAAQ,EAAE,EADsB;AAEhCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE;AADK,GAFmB;AAKhCC,EAAAA,QAAQ,EAAE,KALsB;AAMhCC,EAAAA,UAAU,EAAE;AANoB,CAAD,CAAX,CAQnBC,EARmB,CAQhBb,SAAS,CAACc,QARM,EAQI,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1CD,EAAAA,KAAK,CAACP,QAAN,GAAiBQ,OAAjB;AACD,CAVmB,EAWnBH,EAXmB,CAWhBR,QAXgB,EAWN,CAACU,KAAD,EAAQE,OAAR,KAAoB;AAChC;AACA,MAAIF,KAAK,CAACP,QAAN,CAAeU,IAAf,CAAqBC,IAAD,IAAUA,IAAI,CAACT,IAAL,KAAcO,OAAO,CAACP,IAApD,CAAJ,EAA+D;AAC7DK,IAAAA,KAAK,CAACN,WAAN,GAAoBQ,OAApB;AACAF,IAAAA,KAAK,CAACJ,QAAN,GAAiB,IAAjB;AACD,GAHD,MAGOI,KAAK,CAACH,UAAN,GAAmB,IAAnB;AACR,CAjBmB,EAkBnBC,EAlBmB,CAkBhBP,OAlBgB,EAkBP,CAACS,KAAD,EAAQE,OAAR,KAAoB;AAC/B;AACAF,EAAAA,KAAK,CAACP,QAAN,GAAiB,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBS,OAApB,CAAjB;AACAF,EAAAA,KAAK,CAACN,WAAN,GAAoBQ,OAApB;AACAF,EAAAA,KAAK,CAACJ,QAAN,GAAiB,IAAjB;AACD,CAvBmB,CAAf","sourcesContent":["import { createStore, createEffect, createEvent } from 'effector';\n\nexport interface IUser {\n  name: string;\n  password: string;\n  email?: string;\n  phone?: string;\n}\n\nexport const loadUsers = createEffect(async () => {\n  const req = await fetch('https://jsonplaceholder.typicode.com/users');\n  if (req.ok) return req.json();\n  else return [];\n});\n\nexport const findUser = createEvent<IUser>();\nexport const addUser = createEvent<IUser>();\n\n// @ts-ignore\nexport const $users = createStore({\n  userList: [],\n  currentUser: {\n    name: ''\n  },\n  isLogged: false,\n  loginError: false\n})\n  .on(loadUsers.doneData, (state, payload) => {\n    state.userList = payload;\n  })\n  .on(findUser, (state, newUser) => {\n    // @ts-ignore\n    if (state.userList.find((user) => user.name === newUser.name)) {\n      state.currentUser = newUser;\n      state.isLogged = true;\n    } else state.loginError = true;\n  })\n  .on(addUser, (state, newUser) => {\n    // @ts-ignore\n    state.userList = [...state.userList, newUser];\n    state.currentUser = newUser;\n    state.isLogged = true;\n  });\n"]},"metadata":{},"sourceType":"module"}