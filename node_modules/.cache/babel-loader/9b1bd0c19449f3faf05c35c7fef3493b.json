{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/layout/popup/popup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Wrapper, Overlay, StyledPopup, CloseButton } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Popup = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    children\n  } = _ref;\n  const [open, setOpen] = useState(isOpen);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledPopup, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Popup, \"C14gwP/tMWTB9J3sOboeQxcQqe8=\");\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/layout/popup/popup.tsx"],"names":["React","useState","Wrapper","Overlay","StyledPopup","CloseButton","Popup","isOpen","children","open","setOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,WAA3B,EAAwCC,WAAxC,QAA2D,UAA3D;;;AAOA,MAAMC,KAAuB,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAyB;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,MAAD,CAAhC;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,MAAM,EAAEE,IAAjB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;GAAMF,K;;KAAAA,K;AAcN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Wrapper, Overlay, StyledPopup, CloseButton } from './styles';\n\nexport interface IPopup {\n  isOpen: boolean;\n  children: React.ReactNode;\n}\n\nconst Popup: React.FC<IPopup> = ({ isOpen, children }) => {\n  const [open, setOpen] = useState(isOpen);\n\n  return (\n    <Wrapper isOpen={open}>\n      <Overlay onClick={() => setOpen(false)} />\n      <StyledPopup>\n        <CloseButton onClick={() => setOpen(false)}/>\n        {children}\n      </StyledPopup>\n    </Wrapper>\n  )\n}\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}