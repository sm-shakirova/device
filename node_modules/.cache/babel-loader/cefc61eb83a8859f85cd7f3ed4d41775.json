{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/blocks/filters/filters.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useStore } from 'effector-react';\nimport { $filters, changeFilters } from '../../../model/products';\nimport { filters } from '../../../data/filters';\nimport { Title, Range } from '../../ui';\nimport { StyledFilters, Wrapper, Header, Form, Fieldset, List, ListItem, Control, Label } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = () => {\n  _s();\n\n  const currentFilters = useStore($filters);\n\n  const handleFilterChange = (filterName, optionValue) => {\n    switch (filterName) {\n      case 'color':\n        return currentFilters.colors.includes(optionValue) ? changeFilters({ ...currentFilters,\n          colors: currentFilters.colors.filter(color => color !== optionValue)\n        }) : changeFilters({ ...currentFilters,\n          colors: [...currentFilters.colors, optionValue]\n        });\n\n      case 'bluetooth':\n        return changeFilters({ ...currentFilters,\n          bluetooth: !currentFilters.bluetooth\n        });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledFilters, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          as: \"h3\",\n          size: \"S\",\n          children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: evt => evt.preventDefault(),\n        children: [filters.map(filter => /*#__PURE__*/_jsxDEV(Fieldset, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            as: \"legend\",\n            size: \"XS\",\n            children: filter.display\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), filter.type === 'range' ? /*#__PURE__*/_jsxDEV(Range, {\n            name: filter.name,\n            min: 0,\n            max: 5000,\n            onMinChange: () => {},\n            onMaxChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: filter.options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(Control, {\n                type: filter.type,\n                name: filter.name,\n                value: option.value,\n                checked: filter.name === 'color' ? currentFilters.colors.includes(option.value) : filter.name === 'bluetooth' ? currentFilters.bluetooth : false,\n                onChange: () => handleFilterChange(filter.name, option.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                children: option.display\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this)]\n            }, filter.name + option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filters, \"b0P20AvdwiMW7SpGfDLwi+T8mpI=\", false, function () {\n  return [useStore];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/blocks/filters/filters.tsx"],"names":["React","useStore","$filters","changeFilters","filters","Title","Range","StyledFilters","Wrapper","Header","Form","Fieldset","List","ListItem","Control","Label","Filters","currentFilters","handleFilterChange","filterName","optionValue","colors","includes","filter","color","bluetooth","evt","preventDefault","map","display","type","name","options","option","value","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useStore } from 'effector-react';\nimport { $filters, filterProducts, changeFilters } from '../../../model/products';\nimport { filters } from '../../../data/filters';\nimport { Title, Range } from '../../ui';\nimport {\n  StyledFilters,\n  Wrapper,\n  Header,\n  Form,\n  Fieldset,\n  List,\n  ListItem,\n  Control,\n  Label\n} from './styles';\n\nconst Filters: React.FC = () => {\n  const currentFilters = useStore($filters);\n\n  const handleFilterChange = (filterName: string, optionValue: string) => {\n    switch (filterName) {\n      case 'color':\n        return currentFilters.colors.includes(optionValue) ?\n          changeFilters({\n            ...currentFilters, colors: currentFilters.colors.filter(color => color !== optionValue)\n          }) : changeFilters({\n            ...currentFilters, colors: [...currentFilters.colors, optionValue]\n          })\n      case 'bluetooth':\n        return changeFilters({\n          ...currentFilters, bluetooth: !currentFilters.bluetooth\n        })\n    }}\n\n  return (\n    <StyledFilters>\n      <Wrapper>\n        <Header>\n          <Title as='h3' size='S'>Фильтр:</Title>\n        </Header>\n        <Form onSubmit={(evt) => evt.preventDefault()}>\n          {filters.map((filter) => (\n            <Fieldset>\n              <Title as='legend' size='XS'>{filter.display}</Title>\n              {filter.type === 'range' ?\n                (<Range\n                    name={filter.name}\n                    min={0}\n                    max={5000}\n                    onMinChange={() => {}}\n                    onMaxChange={() => {}}\n                  />) :\n                (<List>\n                  {filter.options!.map((option) => (\n                    <ListItem key={filter.name + option.id}>\n                      <Control\n                        type={filter.type}\n                        name={filter.name}\n                        value={option.value}\n                        checked={filter.name === 'color' ? currentFilters.colors.includes(option.value) :\n                          filter.name === 'bluetooth' ? currentFilters.bluetooth : false}\n                        onChange={() => handleFilterChange(filter.name, option.value)}\n                      />\n                      <Label>{option.display}</Label>\n                    </ListItem>\n                  ))}\n                </List>)}\n            </Fieldset>))}\n          <button type='submit'>Показать</button>\n        </Form>\n      </Wrapper>\n    </StyledFilters>\n  )\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}