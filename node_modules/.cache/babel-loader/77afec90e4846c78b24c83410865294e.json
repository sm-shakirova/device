{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createStore, createEvent } from 'effector';\nimport { useStore } from 'effector-react';\nimport { devices } from '../data/devices';\nconst filters = {\n  price: {\n    min: 0,\n    max: 5000\n  },\n  colors: ['black', 'white'],\n  bluetooth: true\n};\nexport const $filters = createStore(filters);\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\nexport const $catalog = _s(createStore(devices).on(filterProducts, _s(products => {\n  _s();\n\n  const currentFilters = useStore($filters);\n  products.filter(product => {\n    if (product.price < currentFilters.price.min) return false;\n    if (product.price > currentFilters.price.max) return false;\n    if (product.bluetooth !== currentFilters.bluetooth) return false; // будущая проверка списка цветов\n\n    return true;\n  });\n}, \"b0P20AvdwiMW7SpGfDLwi+T8mpI=\", false, function () {\n  return [useStore];\n})), \"b0P20AvdwiMW7SpGfDLwi+T8mpI=\", false, function () {\n  return [useStore];\n}).on(sortByLowerPrice, products => [...products].sort((a, b) => a.price - b.price)).on(sortByHigherPrice, products => [...products].sort((a, b) => b.price - a.price)).on(sortByNovelty, products => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/catalog.ts"],"names":["createStore","createEvent","useStore","devices","filters","price","min","max","colors","bluetooth","$filters","filterProducts","sortByLowerPrice","sortByHigherPrice","sortByNovelty","$catalog","on","products","currentFilters","filter","product","sort","a","b","isNew"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,OAAT,QAAiC,iBAAjC;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,CADA;AAELC,IAAAA,GAAG,EAAE;AAFA,GADO;AAKdC,EAAAA,MAAM,EAAE,CACN,OADM,EAEN,OAFM,CALM;AASdC,EAAAA,SAAS,EAAE;AATG,CAAhB;AAYA,OAAO,MAAMC,QAAQ,GAAGV,WAAW,CAACI,OAAD,CAA5B;AAEP,OAAO,MAAMO,cAAc,GAAGV,WAAW,EAAlC;AACP,OAAO,MAAMW,gBAAgB,GAAGX,WAAW,EAApC;AACP,OAAO,MAAMY,iBAAiB,GAAGZ,WAAW,EAArC;AACP,OAAO,MAAMa,aAAa,GAAGb,WAAW,EAAjC;AAEP,OAAO,MAAMc,QAAQ,GAAG,GAAAf,WAAW,CAAYG,OAAZ,CAAX,CACrBa,EADqB,CAClBL,cADkB,KACDM,QAAD,IAAc;AAAA;;AAChC,QAAMC,cAAc,GAAGhB,QAAQ,CAACQ,QAAD,CAA/B;AACAO,EAAAA,QAAQ,CAACE,MAAT,CAAiBC,OAAD,IAAa;AAC3B,QAAIA,OAAO,CAACf,KAAR,GAAgBa,cAAc,CAACb,KAAf,CAAqBC,GAAzC,EAA8C,OAAO,KAAP;AAC9C,QAAIc,OAAO,CAACf,KAAR,GAAgBa,cAAc,CAACb,KAAf,CAAqBE,GAAzC,EAA8C,OAAO,KAAP;AAC9C,QAAIa,OAAO,CAACX,SAAR,KAAsBS,cAAc,CAACT,SAAzC,EAAoD,OAAO,KAAP,CAHzB,CAK3B;;AAEA,WAAO,IAAP;AACD,GARD;AASD,CAZqB;AAAA,UAEGP,QAFH;AAAA;AAAA,UAEGA,QAFH;AAAA,GAarBc,EAbqB,CAalBJ,gBAbkB,EAaCK,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcI,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACjB,KAAF,GAAUkB,CAAC,CAAClB,KAAzC,CAbd,EAcrBW,EAdqB,CAclBH,iBAdkB,EAcEI,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcI,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAClB,KAAF,GAAUiB,CAAC,CAACjB,KAAzC,CAdf,EAerBW,EAfqB,CAelBF,aAfkB,EAeFG,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcI,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAU,CAAV,GAAcD,CAAC,CAACC,KAAF,GAAU,CAAV,GAAc,CAAC,CAA1D,CAfX,CAAjB","sourcesContent":["import { createStore, createEvent } from 'effector';\nimport { useStore } from 'effector-react';\nimport { devices, IDevice } from '../data/devices';\n\nconst filters = {\n  price: {\n    min: 0,\n    max: 5000,\n  },\n  colors: [\n    'black',\n    'white'\n  ],\n  bluetooth: true,\n};\n\nexport const $filters = createStore(filters);\n\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\n\nexport const $catalog = createStore<IDevice[]>(devices)\n  .on(filterProducts, (products) => {\n    const currentFilters = useStore($filters);\n    products.filter((product) => {\n      if (product.price < currentFilters.price.min) return false;\n      if (product.price > currentFilters.price.max) return false;\n      if (product.bluetooth !== currentFilters.bluetooth) return false;\n\n      // будущая проверка списка цветов\n\n      return true;\n    })\n  })\n  .on(sortByLowerPrice, (products) => [...products].sort((a, b) => a.price - b.price))\n  .on(sortByHigherPrice, (products) => [...products].sort((a, b) => b.price - a.price))\n  .on(sortByNovelty, (products) => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));\n"]},"metadata":{},"sourceType":"module"}