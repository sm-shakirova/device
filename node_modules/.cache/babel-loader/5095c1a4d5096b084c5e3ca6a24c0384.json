{"ast":null,"code":"import { createStore, createEvent } from 'effector';\nimport { devices } from '../data/devices';\nimport { filters, defaultFilters } from '../data/filters';\nimport { categories } from '../data/categories';\nexport const $categories = createStore(categories);\nexport const changeFilters = createEvent();\nexport const $filters = createStore(defaultFilters).on(changeFilters, (_, payload) => payload);\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\nexport const resetProducts = createEvent();\nexport const $products = createStore(devices).on(filterProducts, (products, currentFilters) => {\n  return products.filter(product => {\n    var _product$colors, _product$colors2;\n\n    // if (product.price < currentFilters.price.min) return false;\n    // if (product.price > currentFilters.price.max) return false;\n    if (product.bluetooth && currentFilters.bluetooth === 'no') return false;\n    if (!product.bluetooth && currentFilters.bluetooth === 'yes') return false;\n    let colorCheck;\n    if (!currentFilters.colors.length && !((_product$colors = product.colors) !== null && _product$colors !== void 0 && _product$colors.length)) colorCheck = true;else if (currentFilters.colors.length && !((_product$colors2 = product.colors) !== null && _product$colors2 !== void 0 && _product$colors2.length)) colorCheck = false;else if (!currentFilters.colors.length && product.colors && product.colors.length) colorCheck = false;else {\n      const colors = filters.find(filter => filter.name === 'color').options;\n      colors.forEach(color => {\n        if (currentFilters.colors.includes(color.value) && product.colors && product.colors.includes(color.value)) colorCheck = true;\n      });\n    }\n    return colorCheck;\n  });\n}).on(sortByLowerPrice, products => [...products].sort((a, b) => a.price - b.price)).on(sortByHigherPrice, products => [...products].sort((a, b) => b.price - a.price)).on(sortByNovelty, products => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1)).reset(resetProducts);\n$filters.watch(state => {\n  console.log(state);\n});\n$products.watch(state => {\n  console.log(state);\n});","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/products.ts"],"names":["createStore","createEvent","devices","filters","defaultFilters","categories","$categories","changeFilters","$filters","on","_","payload","filterProducts","sortByLowerPrice","sortByHigherPrice","sortByNovelty","resetProducts","$products","products","currentFilters","filter","product","bluetooth","colorCheck","colors","length","find","name","options","forEach","color","includes","value","sort","a","b","price","isNew","reset","watch","state","console","log"],"mappings":"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","sourcesContent":["import { createStore, createEvent } from 'effector';\nimport { devices, IDevice } from '../data/devices';\nimport { filters, defaultFilters, IDefaultFilters } from '../data/filters';\nimport { categories } from '../data/categories';\n\nexport const $categories = createStore(categories);\n\nexport const changeFilters = createEvent<IDefaultFilters>();\nexport const $filters = createStore(defaultFilters)\n  .on(changeFilters, (_, payload) => payload);\n\nexport const filterProducts = createEvent<IDefaultFilters>();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\nexport const resetProducts = createEvent();\n\nexport const $products = createStore<IDevice[]>(devices)\n  .on(filterProducts, (products, currentFilters) => {\n    return products.filter((product) => {\n      // if (product.price < currentFilters.price.min) return false;\n      // if (product.price > currentFilters.price.max) return false;\n      if (product.bluetooth && currentFilters.bluetooth === 'no') return false;\n      if (!product.bluetooth && currentFilters.bluetooth === 'yes') return false;\n      let colorCheck;\n      if (!currentFilters.colors.length && !product.colors?.length) colorCheck = true;\n      else if (currentFilters.colors.length && !product.colors?.length) colorCheck = false;\n      else if (!currentFilters.colors.length && product.colors &&  product.colors.length) colorCheck = false;\n      else {\n        const colors = filters.find((filter) => filter.name === 'color')!.options;\n        colors!.forEach((color) => {\n          if (currentFilters.colors.includes(color.value) &&\n            product.colors && product.colors.includes(color.value)) colorCheck = true;\n        })\n      }\n      return colorCheck;\n    })\n  })\n  .on(sortByLowerPrice, (products) =>\n    [...products].sort((a, b) => a.price - b.price))\n  .on(sortByHigherPrice, (products) =>\n    [...products].sort((a, b) => b.price - a.price))\n  .on(sortByNovelty, (products) =>\n    [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1))\n  .reset(resetProducts);\n\n$filters.watch((state) => {\n  console.log(state)\n})\n\n$products.watch((state) => {\n  console.log(state)\n})"]},"metadata":{},"sourceType":"module"}