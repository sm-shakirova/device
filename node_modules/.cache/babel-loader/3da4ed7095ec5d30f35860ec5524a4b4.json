{"ast":null,"code":"import { createStore, createEvent } from 'effector';\nimport { devices } from '../data/devices';\nimport { defaultFilters } from '../data/filters';\nexport const changeFilters = createEvent();\nexport const $filters = createStore(defaultFilters).on(changeFilters, (_, payload) => payload);\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\nexport const $products = createStore(devices).on(filterProducts, (products, currentFilters) => {\n  return products.filter(product => {\n    if (product.price < currentFilters.price.min) return false;\n    if (product.price > currentFilters.price.max) return false; // будущая проверка списка цветов\n\n    return true;\n  });\n}).on(sortByLowerPrice, products => [...products].sort((a, b) => a.price - b.price)).on(sortByHigherPrice, products => [...products].sort((a, b) => b.price - a.price)).on(sortByNovelty, products => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));\n$filters.watch(state => {\n  console.log(state);\n});","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/products.ts"],"names":["createStore","createEvent","devices","defaultFilters","changeFilters","$filters","on","_","payload","filterProducts","sortByLowerPrice","sortByHigherPrice","sortByNovelty","$products","products","currentFilters","filter","product","price","min","max","sort","a","b","isNew","watch","state","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAAgD,iBAAhD;AAEA,OAAO,MAAMC,aAAa,GAAGH,WAAW,EAAjC;AACP,OAAO,MAAMI,QAAQ,GAAGL,WAAW,CAACG,cAAD,CAAX,CACrBG,EADqB,CAClBF,aADkB,EACH,CAACG,CAAD,EAAIC,OAAJ,KAAgBA,OADb,CAAjB;AAGP,OAAO,MAAMC,cAAc,GAAGR,WAAW,EAAlC;AACP,OAAO,MAAMS,gBAAgB,GAAGT,WAAW,EAApC;AACP,OAAO,MAAMU,iBAAiB,GAAGV,WAAW,EAArC;AACP,OAAO,MAAMW,aAAa,GAAGX,WAAW,EAAjC;AAEP,OAAO,MAAMY,SAAS,GAAGb,WAAW,CAAYE,OAAZ,CAAX,CACtBI,EADsB,CACnBG,cADmB,EACH,CAACK,QAAD,EAAWC,cAAX,KAA8B;AAChD,SAAOD,QAAQ,CAACE,MAAT,CAAiBC,OAAD,IAAa;AAClC,QAAIA,OAAO,CAACC,KAAR,GAAgBH,cAAc,CAACG,KAAf,CAAqBC,GAAzC,EAA8C,OAAO,KAAP;AAC9C,QAAIF,OAAO,CAACC,KAAR,GAAgBH,cAAc,CAACG,KAAf,CAAqBE,GAAzC,EAA8C,OAAO,KAAP,CAFZ,CAIlC;;AACA,WAAO,IAAP;AACD,GANM,CAAP;AAOD,CATsB,EAUtBd,EAVsB,CAUnBI,gBAVmB,EAUAI,QAAD,IACpB,CAAC,GAAGA,QAAJ,EAAcO,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,KAAF,GAAUK,CAAC,CAACL,KAAzC,CAXqB,EAYtBZ,EAZsB,CAYnBK,iBAZmB,EAYCG,QAAD,IACrB,CAAC,GAAGA,QAAJ,EAAcO,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAAzC,CAbqB,EActBZ,EAdsB,CAcnBM,aAdmB,EAcHE,QAAD,IACjB,CAAC,GAAGA,QAAJ,EAAcO,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAU,CAAV,GAAcD,CAAC,CAACC,KAAF,GAAU,CAAV,GAAc,CAAC,CAA1D,CAfqB,CAAlB;AAiBPnB,QAAQ,CAACoB,KAAT,CAAgBC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,CAFD","sourcesContent":["import { createStore, createEvent } from 'effector';\nimport { devices, IDevice } from '../data/devices';\nimport { defaultFilters, IDefaultFilters } from '../data/filters';\n\nexport const changeFilters = createEvent<IDefaultFilters>();\nexport const $filters = createStore(defaultFilters)\n  .on(changeFilters, (_, payload) => payload);\n\nexport const filterProducts = createEvent<IDefaultFilters>();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\n\nexport const $products = createStore<IDevice[]>(devices)\n  .on(filterProducts, (products, currentFilters) => {\n    return products.filter((product) => {\n      if (product.price < currentFilters.price.min) return false;\n      if (product.price > currentFilters.price.max) return false;\n\n      // будущая проверка списка цветов\n      return true;\n    })\n  })\n  .on(sortByLowerPrice, (products) =>\n    [...products].sort((a, b) => a.price - b.price))\n  .on(sortByHigherPrice, (products) =>\n    [...products].sort((a, b) => b.price - a.price))\n  .on(sortByNovelty, (products) =>\n    [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));\n\n$filters.watch((state) => {\n  console.log(state)\n})"]},"metadata":{},"sourceType":"module"}