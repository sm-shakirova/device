{"ast":null,"code":"var _jsxFileName = \"/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useStore } from \"effector-react\";\nimport { $filters, changeFilters } from \"../../../model/catalog\";\nimport { RangeScale, RangeBar, LeftBlock, RightBlock, LeftToggle, RightToggle, LeftLabel, RightLabel, Input } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Range = _ref => {\n  _s();\n\n  let {\n    width,\n    name,\n    minValue,\n    maxValue\n  } = _ref;\n  const [leftEdge, setLeftEdge] = useState(minValue);\n  const [rightEdge, setRightEdge] = useState(maxValue);\n  const [min, setMin] = useState(minValue === 0 ? '' : minValue);\n  const [max, setMax] = useState(maxValue === 2000 ? '' : maxValue);\n  const filters = useStore($filters);\n\n  const handleChange = (evt, setValue, setEdge) => {\n    const value = Number(evt.target.value);\n    if (value <= 0) setValue('');else setValue(value);\n    const minRange = Number(evt.target.min);\n    const maxRange = Number(evt.target.max);\n    if (value < minRange) setEdge(minRange);else if (value > maxRange) setEdge(maxRange);else setEdge(value);\n    const minPrice = min === '' ? 0 : Number(min);\n    const maxPrice = max === '' ? 2000 : Number(max);\n    const newPrice = {\n      price: {\n        min: minPrice,\n        max: maxPrice\n      }\n    };\n    changeFilters({ ...filters,\n      ...newPrice\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RangeScale, {\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(RangeBar, {\n      left: leftEdge,\n      right: rightEdge,\n      children: [/*#__PURE__*/_jsxDEV(LeftBlock, {\n        children: [/*#__PURE__*/_jsxDEV(LeftToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LeftLabel, {\n          children: [\"\\u043E\\u0442\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"0\",\n            max: \"7000\",\n            placeholder: \"0\",\n            name: `min-${name}`,\n            value: min,\n            onInput: evt => handleChange(evt, setMin, setLeftEdge)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightBlock, {\n        children: [/*#__PURE__*/_jsxDEV(RightToggle, {\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightLabel, {\n          children: [\"\\u0434\\u043E\", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"number\",\n            min: \"2000\",\n            max: \"10000\",\n            placeholder: \"2000\",\n            name: `max-${name}`,\n            value: max,\n            onInput: evt => handleChange(evt, setMax, setRightEdge)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Range, \"QVk6/xSn7uoSGuIHRBSfgZslKUc=\", false, function () {\n  return [useStore];\n});\n\n_c = Range;\nexport default Range;\n\nvar _c;\n\n$RefreshReg$(_c, \"Range\");","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/components/ui/range/range.tsx"],"names":["React","useState","useStore","$filters","changeFilters","RangeScale","RangeBar","LeftBlock","RightBlock","LeftToggle","RightToggle","LeftLabel","RightLabel","Input","Range","width","name","minValue","maxValue","leftEdge","setLeftEdge","rightEdge","setRightEdge","min","setMin","max","setMax","filters","handleChange","evt","setValue","setEdge","value","Number","target","minRange","maxRange","minPrice","maxPrice","newPrice","price"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { useStore } from \"effector-react\";\nimport { $filters, changeFilters } from \"../../../model/catalog\";\nimport {\n  RangeScale,\n  RangeBar,\n  LeftBlock,\n  RightBlock,\n  LeftToggle,\n  RightToggle,\n  LeftLabel,\n  RightLabel,\n  Input\n} from './styles';\n\nexport interface IRangeProps {\n  width?: number;\n  name: string;\n  minValue: number;\n  maxValue: number;\n}\n\nconst Range: React.FC<IRangeProps> =\n  ({ width,\n     name,\n     minValue,\n     maxValue}) => {\n\n  const [leftEdge, setLeftEdge] = useState(minValue);\n  const [rightEdge, setRightEdge] = useState(maxValue);\n\n  const [min, setMin] = useState<string | number>(minValue === 0 ? '' : minValue);\n  const [max, setMax] = useState<string | number>(maxValue === 2000 ? '' : maxValue);\n\n  const filters = useStore($filters);\n\n  const handleChange = (evt: any,\n                        setValue: (num: string | number) => any,\n                        setEdge: (num: number) => any): void => {\n    const value = Number(evt.target.value);\n    if (value <= 0) setValue('');\n    else setValue(value);\n\n    const minRange = Number(evt.target.min);\n    const maxRange = Number(evt.target.max);\n    if (value < minRange) setEdge(minRange);\n    else if (value > maxRange) setEdge(maxRange);\n    else setEdge(value);\n\n    const minPrice = min === '' ? 0 : Number(min);\n    const maxPrice = max === '' ? 2000 : Number(max);\n\n    const newPrice = {price: {min: minPrice, max: maxPrice}};\n    changeFilters({...filters, ...newPrice});\n  };\n\n    return (\n    <RangeScale width={width}>\n      <RangeBar left={leftEdge} right={rightEdge}>\n        <LeftBlock>\n          <LeftToggle type='button'/>\n          <LeftLabel>\n            от\n            <Input\n              type='number'\n              min='0'\n              max='7000'\n              placeholder='0'\n              name={`min-${name}`}\n              value={min}\n              onInput={evt => handleChange(evt, setMin, setLeftEdge)}\n            />\n          </LeftLabel>\n        </LeftBlock>\n\n        <RightBlock>\n          <RightToggle type='button' />\n          <RightLabel>\n            до\n            <Input\n              type='number'\n              min='2000'\n              max='10000'\n              placeholder='2000'\n              name={`max-${name}`}\n              value={max}\n              onInput={evt => handleChange(evt, setMax, setRightEdge)}\n            />\n          </RightLabel>\n        </RightBlock>\n      </RangeBar>\n    </RangeScale>\n  )\n};\n\nexport default Range;\n"]},"metadata":{},"sourceType":"module"}