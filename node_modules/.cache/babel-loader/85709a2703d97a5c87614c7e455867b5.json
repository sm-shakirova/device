{"ast":null,"code":"import { createStore, createEvent } from 'effector';\nimport { useStore } from 'effector-react';\nimport { devices } from '../data/devices';\nimport { filtersToSend } from '../data/filters';\nexport const changeFilters = createEvent();\nexport const $filters = createStore(filtersToSend).on(changeFilters, (_, payload) => payload);\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\nconst currentFilters = useStore($filters);\nexport const $catalog = createStore(devices).on(filterProducts, products => {\n  console.log(currentFilters);\n  return products.filter(product => {\n    if (product.price < currentFilters.price.min) return false;\n    if (product.price > currentFilters.price.max) return false;\n    if (product.bluetooth !== currentFilters.bluetooth) return false; // будущая проверка списка цветов\n\n    return true;\n  });\n}).on(sortByLowerPrice, products => [...products].sort((a, b) => a.price - b.price)).on(sortByHigherPrice, products => [...products].sort((a, b) => b.price - a.price)).on(sortByNovelty, products => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));","map":{"version":3,"sources":["/Users/s.shakirova/Desktop/GitHub/device/src/model/catalog.ts"],"names":["createStore","createEvent","useStore","devices","filtersToSend","changeFilters","$filters","on","_","payload","filterProducts","sortByLowerPrice","sortByHigherPrice","sortByNovelty","currentFilters","$catalog","products","console","log","filter","product","price","min","max","bluetooth","sort","a","b","isNew"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,OAAT,QAAiC,iBAAjC;AACA,SAASC,aAAT,QAA8C,iBAA9C;AAEA,OAAO,MAAMC,aAAa,GAAGJ,WAAW,EAAjC;AACP,OAAO,MAAMK,QAAQ,GAAGN,WAAW,CAACI,aAAD,CAAX,CACrBG,EADqB,CAClBF,aADkB,EACH,CAACG,CAAD,EAAIC,OAAJ,KAAgBA,OADb,CAAjB;AAGP,OAAO,MAAMC,cAAc,GAAGT,WAAW,EAAlC;AACP,OAAO,MAAMU,gBAAgB,GAAGV,WAAW,EAApC;AACP,OAAO,MAAMW,iBAAiB,GAAGX,WAAW,EAArC;AACP,OAAO,MAAMY,aAAa,GAAGZ,WAAW,EAAjC;AAEP,MAAMa,cAAc,GAAGZ,QAAQ,CAACI,QAAD,CAA/B;AACA,OAAO,MAAMS,QAAQ,GAAGf,WAAW,CAAYG,OAAZ,CAAX,CACrBI,EADqB,CAClBG,cADkB,EACDM,QAAD,IAAc;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ;AACA,SAAOE,QAAQ,CAACG,MAAT,CAAiBC,OAAD,IAAa;AAClC,QAAIA,OAAO,CAACC,KAAR,GAAgBP,cAAc,CAACO,KAAf,CAAqBC,GAAzC,EAA8C,OAAO,KAAP;AAC9C,QAAIF,OAAO,CAACC,KAAR,GAAgBP,cAAc,CAACO,KAAf,CAAqBE,GAAzC,EAA8C,OAAO,KAAP;AAC9C,QAAIH,OAAO,CAACI,SAAR,KAAsBV,cAAc,CAACU,SAAzC,EAAoD,OAAO,KAAP,CAHlB,CAKlC;;AAEA,WAAO,IAAP;AACD,GARM,CAAP;AASD,CAZqB,EAarBjB,EAbqB,CAalBI,gBAbkB,EAaCK,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcS,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACL,KAAF,GAAUM,CAAC,CAACN,KAAzC,CAbd,EAcrBd,EAdqB,CAclBK,iBAdkB,EAcEI,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcS,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACN,KAAF,GAAUK,CAAC,CAACL,KAAzC,CAdf,EAerBd,EAfqB,CAelBM,aAfkB,EAeFG,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcS,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAU,CAAV,GAAcD,CAAC,CAACC,KAAF,GAAU,CAAV,GAAc,CAAC,CAA1D,CAfX,CAAjB","sourcesContent":["import { createStore, createEvent } from 'effector';\nimport { useStore } from 'effector-react';\nimport { devices, IDevice } from '../data/devices';\nimport { filtersToSend, IFiltersToSend } from '../data/filters';\n\nexport const changeFilters = createEvent<IFiltersToSend>();\nexport const $filters = createStore(filtersToSend)\n  .on(changeFilters, (_, payload) => payload);\n\nexport const filterProducts = createEvent();\nexport const sortByLowerPrice = createEvent();\nexport const sortByHigherPrice = createEvent();\nexport const sortByNovelty = createEvent();\n\nconst currentFilters = useStore($filters);\nexport const $catalog = createStore<IDevice[]>(devices)\n  .on(filterProducts, (products) => {\n    console.log(currentFilters);\n    return products.filter((product) => {\n      if (product.price < currentFilters.price.min) return false;\n      if (product.price > currentFilters.price.max) return false;\n      if (product.bluetooth !== currentFilters.bluetooth) return false;\n\n      // будущая проверка списка цветов\n\n      return true;\n    })\n  })\n  .on(sortByLowerPrice, (products) => [...products].sort((a, b) => a.price - b.price))\n  .on(sortByHigherPrice, (products) => [...products].sort((a, b) => b.price - a.price))\n  .on(sortByNovelty, (products) => [...products].sort((a, b) => a.isNew ? 0 : b.isNew ? 1 : -1));\n"]},"metadata":{},"sourceType":"module"}